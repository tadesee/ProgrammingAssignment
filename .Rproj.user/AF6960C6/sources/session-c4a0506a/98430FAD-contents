## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function
# This function creates a special “matrix” object that can cache its inverse
install.packages("matlib")
library(matlib)
makeCacheMatrix <- function(x = matrix(),LINPACK = FALSE){
  i <- NULL
  set <- function(y) {
    x <<- y
    i <<- NULL
  }
  get <- function() x
  setinverse <- function(inverse) i <<- inverse
  getinverse <- function() i
  list(set = set,
       get = get,
       setinverse = setinverse,
       getinverse = getinverse)
}
y <- matrix(c(1:4),2,2)
y1 <- makeCacheMatrix(y)
## Write a short comment describing this function
# This function computes the inverse of the special “matrix” 
# returned by makeCacheMatrix above
cacheSolve <- function(x, ...) {
  i <- x$getinverse()
  if (!is.null(i)) {
    message("getting cached data")
    return(i)
  }
  data <- x$get()
  i <- solve(data, ...)
  x$setinverse(i)
  i
}
cacheSolve(y1)
